@startuml

actor User
autonumber
alt Login


    LoginController -> FacadeUser : getInstance()
    activate LoginController
    participant RouterUser
    activate FacadeUser
    FacadeUser -> UserDAO : getInstance()
    activate UserDAO
    UserDAO -> Factory : getInstance()

    activate Factory
    Factory --> MySQLFactory : MySQLFactory()
    deactivate Factory
    activate MySQLFactory
    UserDAO -> MySQLFactory : createUserDao()
    deactivate UserDAO
    MySQLFactory --> MySQLUserDAO : MySQLUserDAO()
    deactivate MySQLFactory
    activate MySQLUserDAO
    deactivate MySQLUserDAO


    LoginController -> RouterUser : getInstance()
    activate RouterUser
    LoginController --> User : Display view
    activate User
    User -> LoginController : Enter his information
    LoginController -> LoginController : login(event)
    participant Session
    LoginController-> FacadeUser : login(email,password)

    FacadeUser -> Session : getInstance()
    activate Session
    FacadeUser -> MySQLUserDAO : searchUser(email,password)
    database DB
    MySQLUserDAO -> DB : Query information
    activate DB
    DB --> MySQLUserDAO : Result Set
    deactivate DB
  alt login successful
    MySQLUserDAO --> FacadeUser : user
    FacadeUser -> Session : setCurrentUser(user)
    deactivate Session
    FacadeUser -> RouterUser : changeView(pathFXML,event)
    deactivate RouterUser
  else login failed
    MySQLUserDAO --> FacadeUser : Exception
    deactivate MySQLUserDAO
    FacadeUser --> LoginController : Exception
    deactivate FacadeUser
    LoginController --> User : Ask to enter good credentials
    deactivate LoginController
    deactivate User
end
end
@enduml
