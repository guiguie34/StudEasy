@startuml
autonumber
actor Student
ProposeAskServiceController -> FacadeService : getInstance()
activate ProposeAskServiceController
activate FacadeService

participant ServiceRouter
activate FacadeService
FacadeService -> ServiceDAO : getInstance()
activate ServiceDAO
ServiceDAO -> Factory : getInstance()

activate Factory
Factory --> MySQLFactory : MySQLFactory()
deactivate Factory
activate MySQLFactory
ServiceDAO -> MySQLFactory : createServiceDao()
deactivate ServiceDAO
MySQLFactory --> MySQLServiceDAO : MySQLServiceDAO()
activate MySQLServiceDAO
deactivate MySQLFactory

ProposeAskServiceController -> ServiceRouter : getInstance()

activate ServiceRouter

ProposeAskServiceController --> Student : Display the view
activate Student
Student -> ProposeAskServiceController : Enter service information, push the button add
ProposeAskServiceController -> FacadeService : submitProposeService(event)
alt bad info case
    FacadeService --> ProposeAskServiceController : throws error
    ProposeAskServiceController --> Student : Ask to enter good information
else good info case
    FacadeService -> MySQLServiceDAO : submitProposeService(String name,...,int cost)
    deactivate FacadeService
    database DB
    MySQLServiceDAO -> DB : Query Information
    deactivate MySQLServiceDAO
    ProposeAskServiceController --> Student : Display the success of the action
    Student -> ProposeAskServiceController : Click "ok"
    deactivate Student
    ProposeAskServiceController -> ServiceRouter : changeView(ServiceRouter.HOME_STUDENT_PATH_FXML)
    deactivate ProposeAskServiceController
    deactivate ServiceRouter
end
@enduml